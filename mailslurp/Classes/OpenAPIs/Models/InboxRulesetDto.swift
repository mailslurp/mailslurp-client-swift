//
// InboxRulesetDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable
import AnyCodable

@objc public class InboxRulesetDto: NSObject, Codable {

    public enum Action: String, Codable, CaseIterable {
        case block = "BLOCK"
        case allow = "ALLOW"
        case forward = "FORWARD"
    }
    public enum Handler: String, Codable, CaseIterable {
        case exception = "EXCEPTION"
    }
    public enum Scope: String, Codable, CaseIterable {
        case receivingEmails = "RECEIVING_EMAILS"
        case sendingEmails = "SENDING_EMAILS"
    }
    public var action: Action
    public var handler: Handler
    public var _id: UUID
    public var inboxId: UUID
    public var scope: Scope
    public var target: String

    public init(action: Action, handler: Handler, _id: UUID, inboxId: UUID, scope: Scope, target: String) {
        self.action = action
        self.handler = handler
        self._id = _id
        self.inboxId = inboxId
        self.scope = scope
        self.target = target
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case action
        case handler
        case _id = "id"
        case inboxId
        case scope
        case target
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(action, forKey: .action)
        try container.encode(handler, forKey: .handler)
        try container.encode(_id, forKey: ._id)
        try container.encode(inboxId, forKey: .inboxId)
        try container.encode(scope, forKey: .scope)
        try container.encode(target, forKey: .target)
    }



}
