//
// WebhookNewAttachmentPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** NEW_ATTACHMENT webhook payload */

@objc public class WebhookNewAttachmentPayload: NSObject, Codable { 

    public enum EventName: String, Codable, CaseIterable {
        case emailReceived = "EMAIL_RECEIVED"
        case newEmail = "NEW_EMAIL"
        case newContact = "NEW_CONTACT"
        case newAttachment = "NEW_ATTACHMENT"
    }
    /** ID of attachment. Use the &#x60;AttachmentController&#x60; to */
    public var attachmentId: String?
    /** Size of attachment in bytes */
    public var contentLength: Int64?
    public var contentLengthNum: NSNumber? {
        get {
            return contentLength as NSNumber?
        }
    }
    /** Content type of attachment such as &#39;image/png&#39; or &#39;application/pdf */
    public var contentType: String?
    /** Name of the event type webhook is being triggered for. */
    public var eventName: EventName?
    /** Idempotent message ID. Store this ID locally or in a database to prevent message duplication. */
    public var messageId: String?
    /** Filename of the attachment if present */
    public var name: String?
    /** ID of webhook entity being triggered */
    public var webhookId: UUID?
    /** Name of the webhook being triggered */
    public var webhookName: String?

    public init(attachmentId: String?, contentLength: Int64?, contentType: String?, eventName: EventName?, messageId: String?, name: String?, webhookId: UUID?, webhookName: String?) {
        self.attachmentId = attachmentId
        self.contentLength = contentLength
        self.contentType = contentType
        self.eventName = eventName
        self.messageId = messageId
        self.name = name
        self.webhookId = webhookId
        self.webhookName = webhookName
    }

}
