//
// DomainPreview.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable
import AnyCodable

/** Preview object for domain entity */
@objc public class DomainPreview: NSObject, Codable {

    public enum DomainType: String, Codable, CaseIterable {
        case httpInbox = "HTTP_INBOX"
        case smtpDomain = "SMTP_DOMAIN"
    }
    public var catchAllInboxId: UUID?
    public var createdAt: Date
    public var domain: String
    public var domainType: DomainType
    public var _id: UUID
    public var isVerified: Bool

    public init(catchAllInboxId: UUID? = nil, createdAt: Date, domain: String, domainType: DomainType, _id: UUID, isVerified: Bool) {
        self.catchAllInboxId = catchAllInboxId
        self.createdAt = createdAt
        self.domain = domain
        self.domainType = domainType
        self._id = _id
        self.isVerified = isVerified
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case catchAllInboxId
        case createdAt
        case domain
        case domainType
        case _id = "id"
        case isVerified
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(catchAllInboxId, forKey: .catchAllInboxId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(domain, forKey: .domain)
        try container.encode(domainType, forKey: .domainType)
        try container.encode(_id, forKey: ._id)
        try container.encode(isVerified, forKey: .isVerified)
    }



}
