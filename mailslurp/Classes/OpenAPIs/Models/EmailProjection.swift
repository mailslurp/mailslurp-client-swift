//
// EmailProjection.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** A compact representation of a full email. Used in list endpoints to keep response sizes low. Body and attachments are not included. To get all fields of the email use the &#x60;getEmail&#x60; method with the email projection&#39;s ID. See &#x60;EmailDto&#x60; for documentation on projection properties. */
@objc public class EmailProjection: NSObject, Codable {

    public var attachments: [String]?
    public var bcc: [String]?
    public var bodyMD5Hash: String?
    public var cc: [String]?
    public var createdAt: Date
    public var from: String?
    public var _id: UUID
    public var inboxId: UUID
    public var read: Bool?
    public var readNum: NSNumber? {
        get {
            return read as NSNumber?
        }
    }
    public var subject: String?
    public var teamAccess: Bool?
    public var teamAccessNum: NSNumber? {
        get {
            return teamAccess as NSNumber?
        }
    }
    public var to: [String]

    public init(attachments: [String]? = nil, bcc: [String]? = nil, bodyMD5Hash: String? = nil, cc: [String]? = nil, createdAt: Date, from: String? = nil, _id: UUID, inboxId: UUID, read: Bool? = nil, subject: String? = nil, teamAccess: Bool? = nil, to: [String]) {
        self.attachments = attachments
        self.bcc = bcc
        self.bodyMD5Hash = bodyMD5Hash
        self.cc = cc
        self.createdAt = createdAt
        self.from = from
        self._id = _id
        self.inboxId = inboxId
        self.read = read
        self.subject = subject
        self.teamAccess = teamAccess
        self.to = to
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case attachments
        case bcc
        case bodyMD5Hash
        case cc
        case createdAt
        case from
        case _id = "id"
        case inboxId
        case read
        case subject
        case teamAccess
        case to
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(attachments, forKey: .attachments)
        try container.encodeIfPresent(bcc, forKey: .bcc)
        try container.encodeIfPresent(bodyMD5Hash, forKey: .bodyMD5Hash)
        try container.encodeIfPresent(cc, forKey: .cc)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(from, forKey: .from)
        try container.encode(_id, forKey: ._id)
        try container.encode(inboxId, forKey: .inboxId)
        try container.encodeIfPresent(read, forKey: .read)
        try container.encodeIfPresent(subject, forKey: .subject)
        try container.encodeIfPresent(teamAccess, forKey: .teamAccess)
        try container.encode(to, forKey: .to)
    }



}
