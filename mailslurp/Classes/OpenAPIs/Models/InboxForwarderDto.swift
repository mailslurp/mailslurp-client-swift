//
// InboxForwarderDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable
import AnyCodable

@objc public class InboxForwarderDto: NSObject, Codable {

    public enum Field: String, Codable, CaseIterable {
        case recipients = "RECIPIENTS"
        case sender = "SENDER"
        case subject = "SUBJECT"
        case attachments = "ATTACHMENTS"
    }
    public var _id: UUID?
    public var inboxId: UUID?
    public var field: Field?
    public var match: String?
    public var forwardToRecipients: [String]?
    public var createdAt: Date?

    public init(_id: UUID? = nil, inboxId: UUID? = nil, field: Field? = nil, match: String? = nil, forwardToRecipients: [String]? = nil, createdAt: Date? = nil) {
        self._id = _id
        self.inboxId = inboxId
        self.field = field
        self.match = match
        self.forwardToRecipients = forwardToRecipients
        self.createdAt = createdAt
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _id = "id"
        case inboxId
        case field
        case match
        case forwardToRecipients
        case createdAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_id, forKey: ._id)
        try container.encodeIfPresent(inboxId, forKey: .inboxId)
        try container.encodeIfPresent(field, forKey: .field)
        try container.encodeIfPresent(match, forKey: .match)
        try container.encodeIfPresent(forwardToRecipients, forKey: .forwardToRecipients)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
    }



}
