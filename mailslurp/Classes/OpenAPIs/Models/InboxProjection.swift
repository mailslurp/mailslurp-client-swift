//
// InboxProjection.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

@objc public class InboxProjection: NSObject, Codable {

    public enum InboxType: String, Codable, CaseIterable {
        case httpInbox = "HTTP_INBOX"
        case smtpInbox = "SMTP_INBOX"
    }
    public var createdAt: Date
    public var emailAddress: String?
    public var favourite: Bool
    public var _id: UUID
    public var inboxType: InboxType?
    public var name: String?
    public var tags: [String]?
    public var teamAccess: Bool

    public init(createdAt: Date, emailAddress: String? = nil, favourite: Bool, _id: UUID, inboxType: InboxType? = nil, name: String? = nil, tags: [String]? = nil, teamAccess: Bool) {
        self.createdAt = createdAt
        self.emailAddress = emailAddress
        self.favourite = favourite
        self._id = _id
        self.inboxType = inboxType
        self.name = name
        self.tags = tags
        self.teamAccess = teamAccess
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case createdAt
        case emailAddress
        case favourite
        case _id = "id"
        case inboxType
        case name
        case tags
        case teamAccess
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(emailAddress, forKey: .emailAddress)
        try container.encode(favourite, forKey: .favourite)
        try container.encode(_id, forKey: ._id)
        try container.encodeIfPresent(inboxType, forKey: .inboxType)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(tags, forKey: .tags)
        try container.encode(teamAccess, forKey: .teamAccess)
    }



}
