//
// DownloadAttachmentDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable
import AnyCodable

/** Content of attachment */
@objc public class DownloadAttachmentDto: NSObject, Codable {

    /** Base64 encoded string of attachment bytes. Decode the base64 encoded string to get the raw contents. If the file has a content type such as &#x60;text/html&#x60; you can read the contents directly by converting it to string using &#x60;utf-8&#x60; encoding. */
    public var base64FileContents: String?
    /** Content type of attachment. Examples are &#x60;image/png&#x60;, &#x60;application/msword&#x60;, &#x60;text/csv&#x60; etc. */
    public var contentType: String?
    /** Size in bytes of attachment content */
    public var sizeBytes: Int64?
    public var sizeBytesNum: NSNumber? {
        get {
            return sizeBytes as NSNumber?
        }
    }

    public init(base64FileContents: String? = nil, contentType: String? = nil, sizeBytes: Int64? = nil) {
        self.base64FileContents = base64FileContents
        self.contentType = contentType
        self.sizeBytes = sizeBytes
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case base64FileContents
        case contentType
        case sizeBytes
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(base64FileContents, forKey: .base64FileContents)
        try container.encodeIfPresent(contentType, forKey: .contentType)
        try container.encodeIfPresent(sizeBytes, forKey: .sizeBytes)
    }



}
