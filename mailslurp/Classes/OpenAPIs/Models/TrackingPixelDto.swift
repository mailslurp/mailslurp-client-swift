//
// TrackingPixelDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable
import AnyCodable

@objc public class TrackingPixelDto: NSObject, Codable {

    public var _id: UUID?
    public var seen: Bool?
    public var seenNum: NSNumber? {
        get {
            return seen as NSNumber?
        }
    }
    public var recipient: String?
    public var html: String?
    public var url: String?
    public var inboxId: UUID?
    public var sentEmailId: UUID?
    public var seenAt: Date?
    public var createdAt: Date?

    public init(_id: UUID? = nil, seen: Bool? = nil, recipient: String? = nil, html: String? = nil, url: String? = nil, inboxId: UUID? = nil, sentEmailId: UUID? = nil, seenAt: Date? = nil, createdAt: Date? = nil) {
        self._id = _id
        self.seen = seen
        self.recipient = recipient
        self.html = html
        self.url = url
        self.inboxId = inboxId
        self.sentEmailId = sentEmailId
        self.seenAt = seenAt
        self.createdAt = createdAt
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _id = "id"
        case seen
        case recipient
        case html
        case url
        case inboxId
        case sentEmailId
        case seenAt
        case createdAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_id, forKey: ._id)
        try container.encodeIfPresent(seen, forKey: .seen)
        try container.encodeIfPresent(recipient, forKey: .recipient)
        try container.encodeIfPresent(html, forKey: .html)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(inboxId, forKey: .inboxId)
        try container.encodeIfPresent(sentEmailId, forKey: .sentEmailId)
        try container.encodeIfPresent(seenAt, forKey: .seenAt)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
    }



}
