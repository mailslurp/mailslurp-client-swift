//
// CreateInboxDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



@objc public class CreateInboxDto: NSObject, Codable { 

    /** Optional description of an inbox for labelling purposes */
    public var _description: String?
    /** Optionally specify an email address you want the inbox to have. When left blank an email address will be randomly assigned to the inbox usually ending in &#x60;@mailslurp.com&#x60;. Custom email addresses must include your own custom domain that you have configured in MailSlurp. So if your domain is &#x60;mysite.com&#x60; you can created any email address ending in &#x60;@mysite.com&#x60;. All email addresses are transformed to lowercase! */
    public var emailAddress: String?
    /** When, if ever, will the inbox expire and be deleted. If null then this inbox is permanent and the emails in it won&#39;t be deleted. Timestamp passed as string. */
    public var expiresAt: Date?
    /** Is the inbox favorited. Favouriting inboxes is typically done in the dashboard for quick access */
    public var favourite: Bool?
    public var favouriteNum: NSNumber? {
        get {
            return favourite as NSNumber?
        }
    }
    /** Optional name of the inbox. Displayed in the dashboard for easier search */
    public var name: String?
    /** Tags that inbox has been tagged with. Tags can be added to inboxes to group different inboxes within an account. You can also search for inboxes by tag in the dashboard UI. */
    public var tags: [String]?

    public init(_description: String?, emailAddress: String?, expiresAt: Date?, favourite: Bool?, name: String?, tags: [String]?) {
        self._description = _description
        self.emailAddress = emailAddress
        self.expiresAt = expiresAt
        self.favourite = favourite
        self.name = name
        self.tags = tags
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case _description = "description"
        case emailAddress
        case expiresAt
        case favourite
        case name
        case tags
    }

}
