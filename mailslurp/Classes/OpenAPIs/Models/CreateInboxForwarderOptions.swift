//
// CreateInboxForwarderOptions.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable
import AnyCodable

/** Options for creating an inbox forwarder */
@objc public class CreateInboxForwarderOptions: NSObject, Codable {

    public enum Field: String, Codable, CaseIterable {
        case recipients = "RECIPIENTS"
        case sender = "SENDER"
        case subject = "SUBJECT"
        case attachments = "ATTACHMENTS"
    }
    /** Field to match against to trigger inbox forwarding for inbound email */
    public var field: Field?
    /** Email addresses to forward an email to if it matches the field and match criteria of the forwarder */
    public var forwardToRecipients: [String]?
    /** String or wildcard style match for field specified when evaluating forwarding rules */
    public var match: String?

    public init(field: Field? = nil, forwardToRecipients: [String]? = nil, match: String? = nil) {
        self.field = field
        self.forwardToRecipients = forwardToRecipients
        self.match = match
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case field
        case forwardToRecipients
        case match
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(field, forKey: .field)
        try container.encodeIfPresent(forwardToRecipients, forKey: .forwardToRecipients)
        try container.encodeIfPresent(match, forKey: .match)
    }



}
