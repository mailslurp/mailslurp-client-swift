//
// DomainDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Domain plus verification records and status */

@objc public class DomainDto: NSObject, Codable { 

    /** The optional catch all inbox that will receive emails sent to the domain that cannot be matched. */
    public var catchAllInboxId: UUID?
    public var createdAt: Date
    /** Unique token DKIM tokens */
    public var dkimTokens: [String]?
    /** Custom domain name */
    public var domain: String?
    /** List of DNS domain name records (C, MX, TXT) etc that you must add to the DNS server associated with your domain provider. */
    public var domainNameRecords: [DomainNameRecord]?
    public var _id: UUID
    /** Whether domain has been verified or not. If the domain is not verified after 72 hours there is most likely an issue with the domains DNS records. */
    public var isVerified: Bool?
    public var isVerifiedNum: NSNumber? {
        get {
            return isVerified as NSNumber?
        }
    }
    public var updatedAt: Date
    public var userId: UUID
    /** Verification tokens */
    public var verificationToken: String?

    public init(catchAllInboxId: UUID?, createdAt: Date, dkimTokens: [String]?, domain: String?, domainNameRecords: [DomainNameRecord]?, _id: UUID, isVerified: Bool?, updatedAt: Date, userId: UUID, verificationToken: String?) {
        self.catchAllInboxId = catchAllInboxId
        self.createdAt = createdAt
        self.dkimTokens = dkimTokens
        self.domain = domain
        self.domainNameRecords = domainNameRecords
        self._id = _id
        self.isVerified = isVerified
        self.updatedAt = updatedAt
        self.userId = userId
        self.verificationToken = verificationToken
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case catchAllInboxId
        case createdAt
        case dkimTokens
        case domain
        case domainNameRecords
        case _id = "id"
        case isVerified
        case updatedAt
        case userId
        case verificationToken
    }

}
