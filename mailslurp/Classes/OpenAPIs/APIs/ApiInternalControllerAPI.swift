//
// ApiInternalControllerAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import PromiseKit

@objc open class ApiInternalControllerAPI : NSObject {
    /**

     - parameter key: (query)  
     - parameter getOrCreateSamlUserOptions: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - returns: Promise<UserDto>
     */
    open class func getSamlUserOrCreate( key: String,  getOrCreateSamlUserOptions: GetOrCreateSamlUserOptions, apiResponseQueue: DispatchQueue = mailslurpAPI.apiResponseQueue) -> Promise<UserDto> {
        let deferred = Promise<UserDto>.pending()
        getSamlUserOrCreateWithRequestBuilder(key: key, getOrCreateSamlUserOptions: getOrCreateSamlUserOptions).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                deferred.resolver.fulfill(response.body!)
            case let .failure(error):
                deferred.resolver.reject(error)
            }
        }
        return deferred.promise
    }

    /**
     - POST /internal/saml/user
     - API Key:
       - type: apiKey x-api-key 
       - name: API_KEY
     - parameter key: (query)  
     - parameter getOrCreateSamlUserOptions: (body)  
     - returns: RequestBuilder<UserDto> 
     */
    open class func getSamlUserOrCreateWithRequestBuilder(key: String, getOrCreateSamlUserOptions: GetOrCreateSamlUserOptions) -> RequestBuilder<UserDto> {
        let path = "/internal/saml/user"
        let URLString = mailslurpAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: getOrCreateSamlUserOptions)

        var urlComponents = URLComponents(string: URLString)
        urlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "key": key.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<UserDto>.Type = mailslurpAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
