//
// EmailProjection.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** A compact representation of a full email. Used in list endpoints to keep response sizes low. Body and attachments are not included. To get all fields of the email use the `getEmail` method with the email projection&#39;s ID. See `EmailDto` for documentation on projection properties. */
@objc public class EmailProjection: NSObject, Codable {

    public var _id: UUID
    public var from: String?
    public var subject: String?
    public var attachments: [String]?
    public var inboxId: UUID
    public var to: [String]
    public var createdAt: Date
    public var bcc: [String]?
    public var cc: [String]?
    public var domainId: UUID?
    public var bodyMD5Hash: String?
    public var bodyExcerpt: String?
    public var read: Bool
    public var teamAccess: Bool

    public init(_id: UUID, from: String? = nil, subject: String? = nil, attachments: [String]? = nil, inboxId: UUID, to: [String], createdAt: Date, bcc: [String]? = nil, cc: [String]? = nil, domainId: UUID? = nil, bodyMD5Hash: String? = nil, bodyExcerpt: String? = nil, read: Bool, teamAccess: Bool) {
        self._id = _id
        self.from = from
        self.subject = subject
        self.attachments = attachments
        self.inboxId = inboxId
        self.to = to
        self.createdAt = createdAt
        self.bcc = bcc
        self.cc = cc
        self.domainId = domainId
        self.bodyMD5Hash = bodyMD5Hash
        self.bodyExcerpt = bodyExcerpt
        self.read = read
        self.teamAccess = teamAccess
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _id = "id"
        case from
        case subject
        case attachments
        case inboxId
        case to
        case createdAt
        case bcc
        case cc
        case domainId
        case bodyMD5Hash
        case bodyExcerpt
        case read
        case teamAccess
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(_id, forKey: ._id)
        try container.encodeIfPresent(from, forKey: .from)
        try container.encodeIfPresent(subject, forKey: .subject)
        try container.encodeIfPresent(attachments, forKey: .attachments)
        try container.encode(inboxId, forKey: .inboxId)
        try container.encode(to, forKey: .to)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(bcc, forKey: .bcc)
        try container.encodeIfPresent(cc, forKey: .cc)
        try container.encodeIfPresent(domainId, forKey: .domainId)
        try container.encodeIfPresent(bodyMD5Hash, forKey: .bodyMD5Hash)
        try container.encodeIfPresent(bodyExcerpt, forKey: .bodyExcerpt)
        try container.encode(read, forKey: .read)
        try container.encode(teamAccess, forKey: .teamAccess)
    }



}
