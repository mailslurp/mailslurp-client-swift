//
// CreateConnectorSyncSettingsOptions.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Options for creating automatic syncing between an inbox connection and an external mail provider */
@objcMembers public class CreateConnectorSyncSettingsOptions: NSObject, Codable, ParameterConvertible {

    public enum SyncScheduleType: String, Sendable, Codable, CaseIterable {
        case interval = "INTERVAL"
    }
    /** Enable automatic background sync */
    public var syncEnabled: Bool?
    public var syncEnabledNum: NSNumber? {
        get {
            return syncEnabled as NSNumber?
        }
    }
    /** Sync schedule type */
    public var syncScheduleType: SyncScheduleType?
    /** Sync interval in minutes */
    public var syncInterval: Int?
    public var syncIntervalNum: NSNumber? {
        get {
            return syncInterval as NSNumber?
        }
    }

    public init(syncEnabled: Bool? = nil, syncScheduleType: SyncScheduleType? = nil, syncInterval: Int? = nil) {
        self.syncEnabled = syncEnabled
        self.syncScheduleType = syncScheduleType
        self.syncInterval = syncInterval
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case syncEnabled
        case syncScheduleType
        case syncInterval
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(syncEnabled, forKey: .syncEnabled)
        try container.encodeIfPresent(syncScheduleType, forKey: .syncScheduleType)
        try container.encodeIfPresent(syncInterval, forKey: .syncInterval)
    }
}

