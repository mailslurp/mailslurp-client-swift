//
// ConnectorProjection.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Connector */
@objcMembers public class ConnectorProjection: NSObject, Codable, JSONEncodable {

    public var enabled: Bool?
    public var enabledNum: NSNumber? {
        get {
            return enabled as NSNumber?
        }
    }
    public var inboxId: UUID
    public var userId: UUID
    public var emailAddress: String?
    public var createdAt: Date
    public var name: String?
    public var _id: UUID

    public init(enabled: Bool? = nil, inboxId: UUID, userId: UUID, emailAddress: String? = nil, createdAt: Date, name: String? = nil, _id: UUID) {
        self.enabled = enabled
        self.inboxId = inboxId
        self.userId = userId
        self.emailAddress = emailAddress
        self.createdAt = createdAt
        self.name = name
        self._id = _id
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case enabled
        case inboxId
        case userId
        case emailAddress
        case createdAt
        case name
        case _id = "id"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encode(inboxId, forKey: .inboxId)
        try container.encode(userId, forKey: .userId)
        try container.encodeIfPresent(emailAddress, forKey: .emailAddress)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encode(_id, forKey: ._id)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ConnectorProjection: Identifiable {}
