//
// FakeEmailDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

@objcMembers public class FakeEmailDto: NSObject, Codable, ParameterConvertible {

    public var _id: UUID
    public var emailAddress: String
    public var sender: Sender?
    public var recipients: EmailRecipients?
    public var attachmentNames: [String]
    public var subject: String?
    public var preview: String?
    /** use read content endpoints instead */
    @available(*, deprecated, message: "This property is deprecated.")
    public var body: String
    public var seen: Bool
    public var createdAt: Date
    public var contentType: String
    public var bodyUrl: String

    public init(_id: UUID, emailAddress: String, sender: Sender? = nil, recipients: EmailRecipients? = nil, attachmentNames: [String], subject: String? = nil, preview: String? = nil, body: String, seen: Bool, createdAt: Date, contentType: String, bodyUrl: String) {
        self._id = _id
        self.emailAddress = emailAddress
        self.sender = sender
        self.recipients = recipients
        self.attachmentNames = attachmentNames
        self.subject = subject
        self.preview = preview
        self.body = body
        self.seen = seen
        self.createdAt = createdAt
        self.contentType = contentType
        self.bodyUrl = bodyUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _id = "id"
        case emailAddress
        case sender
        case recipients
        case attachmentNames
        case subject
        case preview
        case body
        case seen
        case createdAt
        case contentType
        case bodyUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(_id, forKey: ._id)
        try container.encode(emailAddress, forKey: .emailAddress)
        try container.encodeIfPresent(sender, forKey: .sender)
        try container.encodeIfPresent(recipients, forKey: .recipients)
        try container.encode(attachmentNames, forKey: .attachmentNames)
        try container.encodeIfPresent(subject, forKey: .subject)
        try container.encodeIfPresent(preview, forKey: .preview)
        try container.encode(body, forKey: .body)
        try container.encode(seen, forKey: .seen)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(contentType, forKey: .contentType)
        try container.encode(bodyUrl, forKey: .bodyUrl)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension FakeEmailDto: Identifiable {}
