//
// InboxExistsDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Result of email exists query */
@objcMembers public class InboxExistsDto: NSObject, Codable, ParameterConvertible {

    public var exists: Bool
    /** Inbox is full or simulating a soft bounce via inbox replier or rulesets */
    public var softBounce: Bool?
    public var softBounceNum: NSNumber? {
        get {
            return softBounce as NSNumber?
        }
    }
    /** Inbox is blocking receiving emails or simulating a hard bounce via inbox replier or rulesets */
    public var hardBounce: Bool?
    public var hardBounceNum: NSNumber? {
        get {
            return hardBounce as NSNumber?
        }
    }

    public init(exists: Bool, softBounce: Bool? = nil, hardBounce: Bool? = nil) {
        self.exists = exists
        self.softBounce = softBounce
        self.hardBounce = hardBounce
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case exists
        case softBounce
        case hardBounce
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(exists, forKey: .exists)
        try container.encodeIfPresent(softBounce, forKey: .softBounce)
        try container.encodeIfPresent(hardBounce, forKey: .hardBounce)
    }
}

