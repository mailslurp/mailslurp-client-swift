//
// GenerateStructuredContentEmailOptions.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Options for generating structured content output from an email */
@objcMembers public class GenerateStructuredContentEmailOptions: NSObject, Codable, ParameterConvertible {

    public enum ContentSelector: String, Sendable, Codable, CaseIterable {
        case raw = "RAW"
        case body = "BODY"
        case bodyAttachments = "BODY_ATTACHMENTS"
    }
    /** Email ID to read and pass to AI */
    public var emailId: UUID
    /** Content selector to select part of email to operate on */
    public var contentSelector: ContentSelector?
    /** Optional instructions for the AI to follow. Try to be precise and clear. You can include examples and hints. */
    public var instructions: String?
    public var outputSchema: StructuredOutputSchema?
    /** ID of transformer to apply */
    public var transformId: UUID?

    public init(emailId: UUID, contentSelector: ContentSelector? = nil, instructions: String? = nil, outputSchema: StructuredOutputSchema? = nil, transformId: UUID? = nil) {
        self.emailId = emailId
        self.contentSelector = contentSelector
        self.instructions = instructions
        self.outputSchema = outputSchema
        self.transformId = transformId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case emailId
        case contentSelector
        case instructions
        case outputSchema
        case transformId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(emailId, forKey: .emailId)
        try container.encodeIfPresent(contentSelector, forKey: .contentSelector)
        try container.encodeIfPresent(instructions, forKey: .instructions)
        try container.encodeIfPresent(outputSchema, forKey: .outputSchema)
        try container.encodeIfPresent(transformId, forKey: .transformId)
    }
}

