//
// AITransformMappingDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

@objcMembers public class AITransformMappingDto: NSObject, Codable, ParameterConvertible {

    public enum EntityType: String, Sendable, Codable, CaseIterable {
        case inbox = "INBOX"
        case phone = "PHONE"
    }
    public var _id: UUID
    public var aiTransformId: UUID
    public var userId: UUID
    public var name: String?
    public var entityId: UUID?
    public var entityType: EntityType
    public var createdAt: Date

    public init(_id: UUID, aiTransformId: UUID, userId: UUID, name: String? = nil, entityId: UUID? = nil, entityType: EntityType, createdAt: Date) {
        self._id = _id
        self.aiTransformId = aiTransformId
        self.userId = userId
        self.name = name
        self.entityId = entityId
        self.entityType = entityType
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _id = "id"
        case aiTransformId
        case userId
        case name
        case entityId
        case entityType
        case createdAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(_id, forKey: ._id)
        try container.encode(aiTransformId, forKey: .aiTransformId)
        try container.encode(userId, forKey: .userId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(entityId, forKey: .entityId)
        try container.encode(entityType, forKey: .entityType)
        try container.encode(createdAt, forKey: .createdAt)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension AITransformMappingDto: Identifiable {}
