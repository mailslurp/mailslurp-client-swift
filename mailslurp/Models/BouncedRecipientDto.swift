//
// BouncedRecipientDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** Bounced recipient */
public struct BouncedRecipientDto: Codable, Hashable {

    public var id: UUID?
    public var userId: UUID?
    public var sentEmailId: UUID?
    public var recipient: String
    public var diagnosticCode: String?
    public var action: String?
    public var status: String?
    public var createdAt: Date

    public init(id: UUID? = nil, userId: UUID? = nil, sentEmailId: UUID? = nil, recipient: String, diagnosticCode: String? = nil, action: String? = nil, status: String? = nil, createdAt: Date) {
        self.id = id
        self.userId = userId
        self.sentEmailId = sentEmailId
        self.recipient = recipient
        self.diagnosticCode = diagnosticCode
        self.action = action
        self.status = status
        self.createdAt = createdAt
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case userId
        case sentEmailId
        case recipient
        case diagnosticCode
        case action
        case status
        case createdAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(userId, forKey: .userId)
        try container.encodeIfPresent(sentEmailId, forKey: .sentEmailId)
        try container.encode(recipient, forKey: .recipient)
        try container.encodeIfPresent(diagnosticCode, forKey: .diagnosticCode)
        try container.encodeIfPresent(action, forKey: .action)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encode(createdAt, forKey: .createdAt)
    }



}
