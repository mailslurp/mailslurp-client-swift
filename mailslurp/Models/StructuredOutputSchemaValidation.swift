//
// StructuredOutputSchemaValidation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@objcMembers public class StructuredOutputSchemaValidation: NSObject, Codable, JSONEncodable {

    public var valid: Bool
    public var errors: [String]?
    public var exampleOutput: String?

    public init(valid: Bool, errors: [String]? = nil, exampleOutput: String? = nil) {
        self.valid = valid
        self.errors = errors
        self.exampleOutput = exampleOutput
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case valid
        case errors
        case exampleOutput
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(valid, forKey: .valid)
        try container.encodeIfPresent(errors, forKey: .errors)
        try container.encodeIfPresent(exampleOutput, forKey: .exampleOutput)
    }
}

