//
// AttachmentEntityDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** DTO representation of an attachment. */
@objcMembers public class AttachmentEntityDto: NSObject, Codable, JSONEncodable {

    /** The unique identifier for this attachment. */
    public var _id: UUID
    /** The identifier of the attachment file */
    public var attachmentId: String
    /** The user identifier associated with this attachment. */
    public var userId: UUID
    /** The content type of the attachment. */
    public var contentType: String?
    /** The content length of the attachment in bytes. */
    public var contentLength: Int64?
    public var contentLengthNum: NSNumber? {
        get {
            return contentLength as NSNumber?
        }
    }
    /** The content identifier, which is a unique ID for the content part of the email. */
    public var contentId: String?
    /** The name of the attachment file. */
    public var name: String?
    /** The inbox identifier associated with this attachment. */
    public var inboxId: UUID?
    /** The timestamp when this attachment was created. */
    public var createdAt: Date
    /** The timestamp when this attachment was last updated. */
    public var updatedAt: Date

    public init(_id: UUID, attachmentId: String, userId: UUID, contentType: String? = nil, contentLength: Int64? = nil, contentId: String? = nil, name: String? = nil, inboxId: UUID? = nil, createdAt: Date, updatedAt: Date) {
        self._id = _id
        self.attachmentId = attachmentId
        self.userId = userId
        self.contentType = contentType
        self.contentLength = contentLength
        self.contentId = contentId
        self.name = name
        self.inboxId = inboxId
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _id = "id"
        case attachmentId
        case userId
        case contentType
        case contentLength
        case contentId
        case name
        case inboxId
        case createdAt
        case updatedAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(_id, forKey: ._id)
        try container.encode(attachmentId, forKey: .attachmentId)
        try container.encode(userId, forKey: .userId)
        try container.encodeIfPresent(contentType, forKey: .contentType)
        try container.encodeIfPresent(contentLength, forKey: .contentLength)
        try container.encodeIfPresent(contentId, forKey: .contentId)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(inboxId, forKey: .inboxId)
        try container.encode(createdAt, forKey: .createdAt)
        try container.encode(updatedAt, forKey: .updatedAt)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension AttachmentEntityDto: Identifiable {}
