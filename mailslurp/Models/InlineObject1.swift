//
// InlineObject1.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import AnyCodable

/** Byte array request body */
public struct InlineObject1: Codable, Hashable {

    public var short: Int?
    public var char: String?
    public var int: Int?
    public var long: Int64?
    public var float: Float?
    public var double: Double?
    public var direct: Bool?
    public var readOnly: Bool?

    public init(short: Int? = nil, char: String? = nil, int: Int? = nil, long: Int64? = nil, float: Float? = nil, double: Double? = nil, direct: Bool? = nil, readOnly: Bool? = nil) {
        self.short = short
        self.char = char
        self.int = int
        self.long = long
        self.float = float
        self.double = double
        self.direct = direct
        self.readOnly = readOnly
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case short
        case char
        case int
        case long
        case float
        case double
        case direct
        case readOnly
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(short, forKey: .short)
        try container.encodeIfPresent(char, forKey: .char)
        try container.encodeIfPresent(int, forKey: .int)
        try container.encodeIfPresent(long, forKey: .long)
        try container.encodeIfPresent(float, forKey: .float)
        try container.encodeIfPresent(double, forKey: .double)
        try container.encodeIfPresent(direct, forKey: .direct)
        try container.encodeIfPresent(readOnly, forKey: .readOnly)
    }



}
