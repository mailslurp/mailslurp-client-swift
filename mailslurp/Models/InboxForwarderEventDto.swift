//
// InboxForwarderEventDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/** Inbox forwarder event. Describes how an email was handled by an inbox forwarder. */
@objcMembers public class InboxForwarderEventDto: NSObject, Codable, ParameterConvertible {

    public enum Status: String, Sendable, Codable, CaseIterable {
        case success = "SUCCESS"
        case failure = "FAILURE"
    }
    public var _id: UUID?
    public var inboxId: UUID?
    public var emailId: UUID?
    public var sentId: UUID?
    public var userId: UUID?
    public var forwarderId: UUID?
    public var message: String?
    public var status: Status?
    public var createdAt: Date

    public init(_id: UUID? = nil, inboxId: UUID? = nil, emailId: UUID? = nil, sentId: UUID? = nil, userId: UUID? = nil, forwarderId: UUID? = nil, message: String? = nil, status: Status? = nil, createdAt: Date) {
        self._id = _id
        self.inboxId = inboxId
        self.emailId = emailId
        self.sentId = sentId
        self.userId = userId
        self.forwarderId = forwarderId
        self.message = message
        self.status = status
        self.createdAt = createdAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case _id = "id"
        case inboxId
        case emailId
        case sentId
        case userId
        case forwarderId
        case message
        case status
        case createdAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(_id, forKey: ._id)
        try container.encodeIfPresent(inboxId, forKey: .inboxId)
        try container.encodeIfPresent(emailId, forKey: .emailId)
        try container.encodeIfPresent(sentId, forKey: .sentId)
        try container.encodeIfPresent(userId, forKey: .userId)
        try container.encodeIfPresent(forwarderId, forKey: .forwarderId)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encode(createdAt, forKey: .createdAt)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension InboxForwarderEventDto: Identifiable {}
